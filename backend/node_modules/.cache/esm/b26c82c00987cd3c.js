let addDays,isPast,parseISO,format;_098‍.x([["fromDate",()=>fromDate],["formatHistoricalData",()=>formatHistoricalData]]);_098‍.w("date-fns/addDays/index.js",[["default",["addDays"],function(v){addDays=v}]]);_098‍.w("date-fns/isPast/index.js",[["default",["isPast"],function(v){isPast=v}]]);_098‍.w("date-fns/parseISO/index.js",[["default",["parseISO"],function(v){parseISO=v}]]);_098‍.w("date-fns/format/index.js",[["default",["format"],function(v){format=v}]]);




       function fromDate(date){

    const dayArray = [];

    date = parseISO(date, new Date())
    while (isPast(date)){
        const formattedDate = format(date, "yyyy-MM-dd'T'HH:mm:ss.SSSX")
        dayArray.push(formattedDate);
        date = addDays(date, 1);

    }
    return dayArray;
}

       function formatHistoricalData(historicalData){
    for (let data in historicalData){
        historicalData[data].date = format(parseISO(historicalData[data].start), "yyyy-MM-dd")
        delete historicalData[data].start;
        delete historicalData[data].end;
    }
    return historicalData;
}