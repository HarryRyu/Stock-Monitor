let StockListService,AlphaVantageController,formatCompanyOverview,CompanyOverviewService;_368‍.x([["populateCompanyOverviews",()=>populateCompanyOverviews]]);_368‍.w("../database/StockList/service",[["default",["StockListService"],function(v){StockListService=v}]]);_368‍.w("../controller/AlphaVantageManualController",[["default",["AlphaVantageController"],function(v){AlphaVantageController=v}]]);_368‍.w("../router/ResearchRouter/function",[["formatCompanyOverview",["formatCompanyOverview"],function(v){formatCompanyOverview=v}]]);_368‍.w("../database/CompanyOverview/service",[["default",["CompanyOverviewService"],function(v){CompanyOverviewService=v}]]);




const APIKeys = ['113FTC7HN8SMKBCY', 'MLEHC065XYOTVN46', 'EA15V1XI1PFQGRE4', 'TV8A43YRMIT1299T', '45SB86LBVIJH82CI'];
let iteration = 1;
       async function populateCompanyOverviews(){
    // Find all stock lists
    const stockList = await StockListService.findAll();

    for (const stock in stockList){
        const companyExist = await CompanyOverviewService.findBySymbol(stockList[stock].Symbol);
        if (!companyExist.length){
            iteration++;
            saveCompanyOverview(stockList[stock].Symbol, iteration)
        }
        
        // check if stock already exist in company overview
        if (!(iteration % 6)){
            iteration = 1;
            console.log("I am pausing")
            // Wait 13 second
            await new Promise(resolve => {
                setTimeout(resolve, 60000)
            })
        }   
    }
}

async function saveCompanyOverview(symbol, iterations){    
    console.log("I AM RUNNING")
    // if it does not exist, get stock info from alphavantage
    try {
        _368‍.g.console.log("The API Key:", APIKeys[iterations % 4])
        const companyOverview = await AlphaVantageController.getCompanyOverviewManual(symbol, APIKeys[iterations % 4]);
        _368‍.g.console.log("Symbol Saved: ", symbol)
        if (companyOverview.Symbol){
            // If the response isn't empty, save it into the database
            const object = formatCompanyOverview(companyOverview)
            await CompanyOverviewService.create(object);
        }
    } catch(err){
        if (!err.Note){
            const object = {
                Symbol: symbol,
                LastUpdated: new Date(),
            }
            await CompanyOverviewService.create(object);
        }
        _368‍.g.console.log(symbol, err)
    }
    // console.log("I am the company overview: ", companyOverview)

}
